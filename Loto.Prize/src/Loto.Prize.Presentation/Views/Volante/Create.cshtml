@model Loto.Prize.Presentation.Models.VolanteModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>VolanteModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="IdUsuario" class="control-label"></label>
                <input asp-for="IdUsuario" class="form-control" />
                <span asp-validation-for="IdUsuario" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IdJogo" class="control-label"></label>
                <input asp-for="IdJogo" class="form-control" />
                <span asp-validation-for="IdJogo" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="NumerosEscolhidos" class="control-label"></label>
                <input asp-for="NumerosEscolhidos" type="text" id="NumerosEscolhidos" name="NumerosEscolhidos" value="" hidden>
                <span asp-validation-for="NumerosEscolhidos" class="text-danger"></span>
            </div>
            <div id="boxJogos" class="form-group boxJogos" style="width: 60%;">
              
        <!-- Onde os números são criados conforme a necessidade. -->
                
               
          </div>
                
            
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
